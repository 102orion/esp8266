#!/usr/bin/perl
#
#  Connect to the bus on the local system and handle the presence/
# absence of a human.
#
#  This sample code plays music when I'm in front of my desk.
#
#

use strict;
use warnings;

use JSON;
use Net::MQTT::Simple;


#
# The threshold for detection, in CM
#
my $threshold = 90;

#
#  The current state, and previous state.
#
my $state = "";
my $prev  = "";

#
#  Connect to the queue.
#
my $mqtt = Net::MQTT::Simple->new("localhost");

#
#  Watch the queue
#
$mqtt->run(
    "+" => sub {
        my ( $topic, $message ) = @_;
        if ( $topic eq "distance" )
        {
            handle_distance($message);
        }
        else
        {
            print "Ignoring topic:$topic -> $message\n";
        }
    },
);

exit(0);




#
# If the distance is within our threshold we can decide if there is
# a human present.
#
sub handle_distance
{
    my ($msg) = (@_);
    my $json  = JSON->new->allow_nonref;
    my $obj   = $json->decode($msg);

    #
    # Get the distance, in CM
    #
    my $dist = $obj->{ 'distance' };

    #
    #  Larger than 2000?  Error
    #
    return if ( $dist >= 2000 );

    #
    # No state?  This is the first run.  We're good
    #
    if ( $dist <= $threshold )
    {
        $state = "present";
    }
    else
    {
        $state = "missing";
    }

    #
    #  Has the state-changed?
    #
    if ( $state ne $prev )
    {
        print "State changed - New state: $state\n";

        #
        #  Did we change to the "present" state?
        #
        if ( $state eq "present" )
        {
            # Play on
            system("mpc play");
        }
        else
        {
            # Stop the music
            system("mpc stop");
        }
        $prev = $state;
    }
}
